<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button6.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAAK9JREFUSEvt
        lEEKgzAQRXOEbtx4QutRXXbnShgLWUTwCDUfZopYHZNoigsfBBPz539Ihpiba/ImV1lrC17uAi1qeKlD
        NNQ9DR8/XiEh0ECLGl/75N/bdN348OKGQ1oiV/LWD9iDhrUNanlLJyQk2VzQQg6bC2shp5kL80vk73ce
        02kqi5BzzcHiWDDU7ooi6xGtXajWXVFo3XI4RDMXkkNCzIWkkOyPHcj6XN/8GWMm/Lqtpg0djOgAAAAA
        SUVORK5CYII=
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>